{"version":3,"sources":["components/Navbar.js","components/InputField.js","components/ProfileData.js","components/Addresses.js","Dashboard.js","serviceWorker.js","index.js"],"names":["Navbar","dataItems","purchasesItems","productsItems","servicesItems","entries","index","value","push","className","key","toString","id","React","Component","InputField","classes","this","props","onChange","handleChange","name","placeholder","type","required","ProfileData","state","edit","data","editMode","bind","cancel","setState","handleCancel","salutation","sex","firstname","lastname","email","company","customernumber","onClick","handleValueChange","Addresses","receiver","fulladdress","street","postcode","city","Dashboard","country","handleInputChange","event","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f1c6702a.chunk.js","sourcesContent":["import React from 'react';\n\nclass Navbar extends React.Component {\n    render() {\n      \n      //consider changing these to lists of objects for when they need to link somewhere: \n      //[{content: Profile, link: source}, {content: Addresses, link source}, etc.]\n      const data = [\"Profile\",\n                    \"Addresses\",\n                    \"Payment Methods\"\n                   ]\n      const purchases = [\"Orders\",\n                         \"Returns\",\n                         \"Receipts & credits\"\n                        ]\n      const products = [\"Project lists\",\n                        \"Quotations\",\n                        \"Comparisons\",\n                        \"Suggestions\"\n                       ]\n      const services = [\"Newsletter management\",\n                        \"Business Card\",\n                        \"FAQ\",\n                        \"Help\"\n                       ]\n      const dataItems = []\n      const purchasesItems = []\n      const productsItems = []\n      const servicesItems = []\n      for (const [index, value] of data.entries()) {\n          // eslint-disable-next-line\n      dataItems.push(<a className=\"link\"><li key={index.toString()}><i className=\"fas fa-chevron-right icon-forward-animation\"></i> {value}</li></a>)\n    }\n      for (const [index, value] of purchases.entries()) {\n          // eslint-disable-next-line\n      purchasesItems.push(<a className=\"link\"><li key={(index+3).toString()}><i className=\"fas fa-chevron-right icon-forward-animation\"></i> {value}</li></a>)\n    }\n      for (const [index, value] of products.entries()) {\n          // eslint-disable-next-line\n      productsItems.push(<a className=\"link\"><li key={(index+6).toString()}><i className=\"fas fa-chevron-right icon-forward-animation\"></i> {value}</li></a>)\n    }\n      for (const [index, value] of services.entries()) {\n          // eslint-disable-next-line\n      servicesItems.push(<a className=\"link\"><li key={(index+10).toString()}><i className=\"fas fa-chevron-right icon-forward-animation\"></i> {value}</li></a>)\n    }\n      return (\n        <nav id=\"navbar\">\n        <div id=\"nav-container\">\n          <header>My Account</header>\n          <ul>\n            {/* // eslint-disable-next-line */}\n            <a className=\"link\"><li><i className=\"fas fa-chevron-right icon-forward-animation\"></i> Dashboard</li></a>\n            <li key={\"data\"} className=\"nav-header\"><div>Data</div></li>\n            {dataItems}\n            <li key={\"purchases\"} className=\"nav-header\"><div>Purchases</div></li>\n            {purchasesItems}\n            <li key={\"products\"} className=\"nav-header\"><div>Products</div></li>\n            {productsItems}\n            <li key={\"services\"} className=\"nav-header\"><div>Services</div></li>\n            {servicesItems}\n          </ul>\n        </div>\n      </nav>\n      );\n    }\n  }\n  \n  export default Navbar","import React from 'react';\n\nclass InputField extends React.Component {\n    render() {\n      const classes = this.props.className + \" textbox hvr-underline-from-center\"\n      return (\n        <div className=\"input-div\">\n          <input \n            value={this.props.value}\n            onChange={this.props.handleChange}\n            name = {this.props.name}\n            placeholder={this.props.placeholder}\n            className={classes}\n            type={this.props.type}\n            required={this.props.required} /> \n          <label className=\"label\"></label>\n        </div>\n      );\n    }\n  }\n  \n  //fix inputs being required \n  // animation of floating label would be very nice\n  \n  export default InputField","import React from 'react';\nimport InputField from \"./InputField\"\n\nclass ProfileData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {edit: false,\n                  data: this.props.data\n                 };\n    this.editMode = this.editMode.bind(this);\n    this.cancel = this.cancel.bind(this);\n  }\n  \n  editMode(state) {\n      this.setState({\n        edit: !state.edit,\n        data: state.data\n      })\n    }\n  \n  cancel(state) {\n    this.setState({\n      edit: !state.edit\n    })\n    this.props.handleCancel(state)\n  }\n  \n  render() {\n    const data = this.props.data\n    const salutation = data.sex === \"male\" ? \"Mr.\" : \"Ms\"\n    const name = data.firstname + \" \" + data.lastname\n    const email = data.email\n    const company = data.company\n    const customernumber = data.customernumber\n    \n    if (!this.state.edit) {\n      return (\n        <div className=\"tile growing-animation\">\n          <div className=\"tile-heading\">\n            <i className=\"fas fa-user blue icon-margin\"></i> Profile Data \n            <button \n              onClick={() => this.editMode(this.state)} \n              className=\"tile-button blue\">edit\n            </button>\n          </div>\n          <div className=\"profile-data\">\n            <ul>\n              <li>{salutation} {name}</li>\n              <li>{company} </li>\n              <li>{email} </li>\n              <li>Customer number {customernumber} </li>\n            </ul>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"tile growing-animation\">\n          <div className=\"tile-heading\">\n            <i className=\"fas fa-user blue icon-margin\"></i> Profile Data \n            <button \n              onClick={() => this.editMode(this.state)}\n              className=\"tile-button blue\">\n              <i className=\"far fa-2x fa-check-circle\"></i>\n            </button>\n            <button \n              onClick={() => this.cancel(this.state)}\n              className=\"tile-button blue\">\n              <i className=\"far fa-2x fa-times-circle\"></i>\n            </button>\n          </div>\n          <div className=\"profile-data\">\n            <ul>\n              <li>\n                <InputField \n                  id=\"first-name-input\" \n                  className=\"float-left\"\n                  value={data.firstname}\n                  handleChange={this.props.handleValueChange} \n                  name= \"firstname\"\n                  placeholder=\"First name\" \n                  type=\"text\" \n                  required />\n              </li>\n              <li>\n                <InputField \n                  id=\"last-name-input\"\n                  className=\"float-right\"\n                  value={data.lastname}\n                  handleChange={this.props.handleValueChange}\n                  name= \"lastname\"\n                  placeholder=\"Last name\"\n                  type=\"text\"\n                  required />\n              </li>\n              <li>\n                <InputField \n                  id=\"company-input\"\n                  value={data.company}\n                  handleChange={this.props.handleValueChange}\n                  name=\"company\"\n                  placeholder=\"Company\"\n                  type=\"text\"\n                  required />\n              </li>\n              <li>\n                <InputField \n                  id=\"email-input\"\n                  value={data.email}\n                  handleChange={this.props.handleValueChange}\n                  name=\"email\"\n                  placeholder=\"E-Mail\"\n                  type=\"email\"\n                  required=\"true\" />\n              </li>\n              <li>Customer number {customernumber} </li>\n            </ul>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ProfileData","import React from 'react';\nimport InputField from \"./InputField\"\n\nclass Addresses extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {edit: false,\n                  data: this.props.data\n                 };\n    this.editMode = this.editMode.bind(this);\n    this.cancel = this.cancel.bind(this);\n  }\n  \n  editMode(state) {\n      this.setState({\n        edit: !state.edit,\n        data: state.data\n      })\n    }\n  \n  cancel(state) {\n    this.setState({\n      edit: !state.edit\n    })\n    this.props.handleCancel(state)\n  }\n  \n  render() {\n    const data = this.props.data\n    const receiver = data.company + \", \" + data.firstname + \" \" + data.lastname\n    const fulladdress = data.street + \", \" + data.postcode + \" \" + data.city\n    if (!this.state.edit) {\n      return (\n        <div className=\"tile growing-animation\">\n          <div className=\"tile-heading\">\n            <i className=\"fas fa-map-marker-alt blue icon-margin\"></i> Addresses \n            <button \n              onClick={() => this.editMode(this.state)}\n              className=\"tile-button blue\">edit\n            </button>\n          </div>\n          <div className=\"addresses\">\n            <ul>\n              <li>Current standard delivery address: </li>\n              <li>{receiver} </li>\n              <li>{fulladdress} </li> \n            </ul>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"tile growing-animation\">\n          <div className=\"tile-heading\">\n            <i className=\"fas fa-map-marker-alt blue icon-margin\"></i> Addresses \n            <button \n              onClick={() => this.editMode(this.state)}\n              className=\"tile-button blue\">\n              <i className=\"far fa-2x fa-check-circle\"></i>\n            </button>\n            <button \n              onClick={() => this.cancel(this.state)}\n              className=\"tile-button blue\">\n              <i className=\"far fa-2x fa-times-circle\"></i>\n            </button>\n          </div>\n          <div className=\"addresses\">\n            <ul>\n              <li>Current standard delivery address: </li>\n              <li>{receiver} </li>\n              <li>\n                <InputField\n                  value={data.street}\n                  handleChange={this.props.handleValueChange}\n                  name=\"street\"\n                  placeholder=\"Street Address\"\n                  type=\"text\"\n                  required />\n              </li>\n              <li>\n                <InputField\n                  className=\"float-left\"\n                  value={data.postcode}\n                  handleChange={this.props.handleValueChange}\n                  name=\"postcode\"\n                  placeholder=\"Postcode\"\n                  type=\"text\"\n                  required />\n                <InputField\n                  className=\"float-right\"\n                  value={data.city}\n                  handleChange={this.props.handleValueChange}\n                  name=\"city\"\n                  placeholder=\"City\"\n                  type=\"text\"\n                  required />\n              </li>\n            </ul>\n          </div>\n        </div>\n      )\n    }  \n  }\n}\n\nexport default Addresses","import React from 'react';\nimport Navbar from \"./components/Navbar\"\nimport ProfileData from \"./components/ProfileData\"\nimport Addresses from \"./components/Addresses\"\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: \"Harry\",\n      lastname: \"Potter\",\n      sex: \"male\",\n      email: \"harry.potter@gmail.com\",\n      customernumber: 5218021513,\n      company: \"Hogwarts AG\",\n      street: \"Hogwartsstreet 14\",\n      postcode: \"2516\",\n      city: \"London\",\n      country: \"Great Britian\",\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n  \n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({[name]: value});\n  }\n  \n  // cancelling goes back to the orginal value instead of the value it was when editing was started --> fix\n  // also every cancel button resets every tile not just the one that was worked on (that may fix itself once the first issue is solved though)\n  handleCancel(state) {\n    this.setState({\n      firstname: state.data.firstname,\n      lastname: state.data.lastname,\n      company: state.data.company,\n      email: state.data.email,\n      street: state.data.street,\n      postcode: state.data.postcode,\n      city: state.data.city\n    })\n  }\n  \n  render() {\n    return (\n      <div className=\"page\">\n        <Navbar />\n        <div className=\"dashboard\">\n          <ProfileData \n            data={this.state} \n            handleValueChange={this.handleInputChange} \n            handleCancel={this.handleCancel} />\n          <Addresses \n            data={this.state}\n            handleValueChange={this.handleInputChange}\n            handleCancel={this.handleCancel} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Dashboard from './Dashboard';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}